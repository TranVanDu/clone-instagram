{"version":3,"sources":["components/Navbar.js","components/screens/Preloader.js","components/screens/Home.js","components/screens/Login.js","components/screens/Signup.js","components/screens/Profile.js","components/screens/CreatePost.js","components/screens/UserProfile.js","components/screens/SubcribesUserPosts.js","reducers/userReducer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","useContext","UserContext","state","dispatch","history","useHistory","className","style","backgroundColor","to","id","key","marginTop","marginRight","onClick","localStorage","clear","type","M","toast","html","classes","push","Preloader","Home","useState","data","setData","text","setText","isLoading","setLoading","useEffect","fetch","method","headers","Authorization","getItem","then","res","json","posts","catch","err","console","log","length","map","item","index","src","postedBy","pic","alt","_id","name","color","cursor","float","postId","result","newData","filter","width","photo","title","likes","includes","body","JSON","stringify","marginLeft","comments","record","author","avatar","content","onSubmit","e","poste","preventDefault","makeComment","target","value","borderBottom","placeholder","onChange","Login","email","setEmail","password","setPassword","test","error","setItem","token","user","payload","Signup","setName","image","setImage","isloading","undefined","url","setUrl","uploadFields","message","required","files","formData","FormData","i","append","uploadPic","Profile","imageInputRef","useRef","mypics","setMypics","loading","setLoad","visible","setVisible","defaultAvatart","myPosts","handleCancel","current","handleOk","updatePhoto","maxWidth","margin","display","padding","position","flexDirection","justifyContent","alignItems","followers","following","onOk","onCancel","footer","ref","CreatePost","setTitle","setBody","textAlign","htmlFor","UserProfile","userProfile","setProfile","userid","useParams","showFollow","setShowFollow","fontSize","followId","prevState","newFollower","SubcribesUserPosts","fontWeight","reducer","action","createContext","Routing","parse","exact","path","App","useReducer","Provider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.37331942.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../App\";\r\nimport M from \"materialize-css\";\r\nimport \"../assets/styles/nav.css\";\r\n//import PropTypes from \"prop-types\";\r\n\r\n// Navbar.propTypes = {};\r\n\r\nfunction Navbar(props) {\r\n    const { state, dispatch } = useContext(UserContext);\r\n    const history = useHistory();\r\n    const renderList = () => {\r\n        if (state) {\r\n            return [\r\n                <li key={0}>\r\n                    <Link to=\"/profile\">Profile</Link>\r\n                </li>,\r\n                <li key={1}>\r\n                    <Link to=\"/createpost\">Create Post</Link>\r\n                </li>,\r\n                <li key={3}>\r\n                    <Link to=\"/myfollowingpost\">Follow</Link>\r\n                </li>,\r\n                <li key={2}>\r\n                    <button\r\n                        className=\"btn waves-effect waves-light #e53935 red darken-1\"\r\n                        style={{\r\n                            marginTop: \"0px\",\r\n                            marginRight: \"20px\",\r\n                        }}\r\n                        onClick={() => {\r\n                            localStorage.clear();\r\n                            dispatch({ type: \"CLEAR\" });\r\n                            M.toast({\r\n                                html: \"Logout sucess\",\r\n                                classes: \"#e53935 red darken-1\",\r\n                            });\r\n                            history.push(\"/signin\");\r\n                        }}\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </li>,\r\n            ];\r\n        } else {\r\n            return [\r\n                <li key={3}>\r\n                    <Link to=\"/signin\">Login</Link>\r\n                </li>,\r\n                <li key={4}>\r\n                    <Link to=\"/signup\">Signup</Link>\r\n                </li>,\r\n            ];\r\n        }\r\n    };\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper\" style={{ backgroundColor: \"#fff\" }}>\r\n                <Link to={state ? \"/\" : \"/signin\"} className=\"brand-logo left\">\r\n                    Instagram\r\n                </Link>\r\n                <ul id=\"nav-mobile\" className=\"right\">\r\n                    {renderList()}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nfunction Preloader() {\r\n    return (\r\n        <div className=\"preloader-background\">\r\n            <div className=\"preloader-wrapper small active\">\r\n                <div className=\"spinner-layer spinner-green-only\">\r\n                    <div className=\"circle-clipper left\">\r\n                        <div className=\"circle\"></div>\r\n                    </div>\r\n                    <div className=\"gap-patch\">\r\n                        <div className=\"circle\"></div>\r\n                    </div>\r\n                    <div className=\"circle-clipper right\">\r\n                        <div className=\"circle\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preloader;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Preloader from \"./Preloader\";\r\nimport { UserContext } from \"../../App\";\r\nimport M from \"materialize-css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Comment, Avatar } from \"antd\";\r\n// import PropTypes from \"prop-types\";\r\n\r\n// Home.propTypes = {};\r\n\r\nfunction Home(props) {\r\n    const [data, setData] = useState(\"\");\r\n    const [text, setText] = useState(\"\");\r\n    const [isLoading, setLoading] = useState(false);\r\n    const { state } = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        fetch(\"/allposts\", {\r\n            method: \"get\",\r\n            headers: {\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setData(data.posts);\r\n                setLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setLoading(false);\r\n            });\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const like = (id) => {\r\n        fetch(\"/like\", {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((result) => {\r\n                const newData = data.map((item) => {\r\n                    if (item._id === result._id) {\r\n                        return { ...item, likes: result.likes };\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                });\r\n\r\n                setData(newData);\r\n            })\r\n            .catch((err) => {\r\n                M.toast({\r\n                    html: err,\r\n                    classes: \"#e53935 red darken-1\",\r\n                });\r\n            });\r\n    };\r\n\r\n    const unLike = (id) => {\r\n        fetch(\"/unlike\", {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((result) => {\r\n                const newData = data.map((item) => {\r\n                    if (item._id === result._id) {\r\n                        return { ...item, likes: result.likes };\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                });\r\n\r\n                setData(newData);\r\n            })\r\n            .catch((err) => {\r\n                M.toast({\r\n                    html: err,\r\n                    classes: \"#e53935 red darken-1\",\r\n                });\r\n            });\r\n    };\r\n\r\n    const makeComment = (text, postId) => {\r\n        fetch(\"/comment\", {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n            body: JSON.stringify({\r\n                text,\r\n                postId,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((result) => {\r\n                const newData = data.map((item) => {\r\n                    if (item._id === result._id) {\r\n                        return result;\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                });\r\n\r\n                setData(newData);\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    const deletePost = (postId) => {\r\n        fetch(`/deletepost/${postId}`, {\r\n            method: \"delete\",\r\n            headers: {\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n        })\r\n            .then((res) => res.json())\r\n            .then((result) => {\r\n                const newData = data.filter((item) => {\r\n                    return item._id !== result._id;\r\n                });\r\n                setData(newData);\r\n                M.toast({\r\n                    html: \"delete post success\",\r\n                    classes: \"#2e7d32 green darken-3\",\r\n                });\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n    return (\r\n        <div>\r\n            {!isLoading ? (\r\n                <div className=\"home\">\r\n                    {data.length ? (\r\n                        data.map((item, index) => (\r\n                            <div key={index} className=\"card home-card\">\r\n                                <h5 className=\"home-title\">\r\n                                    <Avatar\r\n                                        style={{ marginRight: \"5px\" }}\r\n                                        src={item.postedBy.pic}\r\n                                        alt=\"avatar\"\r\n                                    />\r\n                                    <Link\r\n                                        to={\r\n                                            item.postedBy._id !== state._id\r\n                                                ? \"/profile/\" +\r\n                                                  item.postedBy._id\r\n                                                : \"/profile\"\r\n                                        }\r\n                                    >\r\n                                        {item.postedBy.name}\r\n                                    </Link>\r\n                                    {item.postedBy._id === state._id ? (\r\n                                        <i\r\n                                            className=\"material-icons\"\r\n                                            style={{\r\n                                                color: \"red\",\r\n                                                cursor: \"pointer\",\r\n                                                float: \"right\",\r\n                                            }}\r\n                                            onClick={() => deletePost(item._id)}\r\n                                        >\r\n                                            delete\r\n                                        </i>\r\n                                    ) : (\r\n                                        <i\r\n                                            className=\"material-icons\"\r\n                                            style={{\r\n                                                color: \"#ddd\",\r\n                                                float: \"right\",\r\n                                            }}\r\n                                        >\r\n                                            delete\r\n                                        </i>\r\n                                    )}\r\n                                </h5>\r\n                                <div className=\"car-image\">\r\n                                    <img\r\n                                        style={{\r\n                                            width: \"100%\",\r\n                                        }}\r\n                                        src={item.photo}\r\n                                        alt={item.title}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"card-content\">\r\n                                    {item.likes.includes(state._id) ? (\r\n                                        <i\r\n                                            className=\"material-icons\"\r\n                                            style={{\r\n                                                color: \"red\",\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                            onClick={() => unLike(item._id)}\r\n                                        >\r\n                                            favorite\r\n                                        </i>\r\n                                    ) : (\r\n                                        <i\r\n                                            className=\"material-icons\"\r\n                                            style={{\r\n                                                color: \"#ddd\",\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                            onClick={() => like(item._id)}\r\n                                        >\r\n                                            favorite\r\n                                        </i>\r\n                                    )}\r\n                                    <span>{item.likes.length} likes</span>\r\n                                    <hr />\r\n                                    <h6>{item.title}</h6>\r\n                                    <p style={{ marginLeft: \"10px\" }}>\r\n                                        {item.body}\r\n                                    </p>\r\n                                    <div style={{ marginTop: \"10px\" }}>\r\n                                        {item.comments.map((record, index) => {\r\n                                            return (\r\n                                                <Comment\r\n                                                    key={index}\r\n                                                    // actions={[\r\n                                                    //     <span key=\"comment-nested-reply-to\">\r\n                                                    //         Reply to\r\n                                                    //     </span>,\r\n                                                    // ]}\r\n                                                    author={\r\n                                                        // <Link>\r\n                                                        //     {\r\n                                                        //         record.postedBy\r\n                                                        //             .name\r\n                                                        //     }\r\n                                                        // </Link>\r\n                                                        <Link\r\n                                                            to={\r\n                                                                record.postedBy\r\n                                                                    ._id !==\r\n                                                                state._id\r\n                                                                    ? \"/profile/\" +\r\n                                                                      record\r\n                                                                          .postedBy\r\n                                                                          ._id\r\n                                                                    : \"/profile\"\r\n                                                            }\r\n                                                        >\r\n                                                            {item.postedBy.name}\r\n                                                        </Link>\r\n                                                    }\r\n                                                    avatar={\r\n                                                        <Avatar\r\n                                                            src={\r\n                                                                record.postedBy\r\n                                                                    .pic\r\n                                                            }\r\n                                                            alt=\"Han Solo\"\r\n                                                        />\r\n                                                    }\r\n                                                    content={\r\n                                                        <p>{record.text}</p>\r\n                                                    }\r\n                                                ></Comment>\r\n                                            );\r\n                                        })}\r\n                                    </div>\r\n                                    <form\r\n                                        onSubmit={(e) => {\r\n                                            console.log(item.poste);\r\n                                            e.preventDefault();\r\n                                            makeComment(\r\n                                                e.target[0].value,\r\n                                                item._id\r\n                                            );\r\n                                            setText(\"\");\r\n                                        }}\r\n                                    >\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            style={{ borderBottom: \"none\" }}\r\n                                            placeholder=\"add a comment\"\r\n                                            value={text}\r\n                                            onChange={(e) => {\r\n                                                setText(e.target.value);\r\n                                            }}\r\n                                        />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <div>\r\n                            <h2>No posts</h2>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            ) : (\r\n                <Preloader />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport { useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\nimport Preloader from \"./Preloader\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nfunction Login() {\r\n    const { state, dispatch } = useContext(UserContext);\r\n    const history = useHistory();\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const login = () => {\r\n        setLoading(true);\r\n        if (\r\n            // eslint-disable-next-line\r\n            !/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i.test(\r\n                email\r\n            )\r\n        ) {\r\n            M.toast({\r\n                html: \"invalid email\",\r\n                classes: \"#e53935 red darken-1\",\r\n            });\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        fetch(\"/signin\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                email,\r\n                password,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setLoading(false);\r\n                if (data.error) {\r\n                    M.toast({\r\n                        html: data.error,\r\n                        classes: \"#e53935 red darken-1\",\r\n                    });\r\n                } else {\r\n                    localStorage.setItem(\"token\", data.token);\r\n                    localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n                    dispatch({\r\n                        type: \"USER\",\r\n                        payload: data.user,\r\n                    });\r\n                    M.toast({\r\n                        html: \"login success\",\r\n                        classes: \"#2e7d32 green darken-3\",\r\n                    });\r\n                    history.push(\"/\");\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setLoading(false);\r\n                M.toast({\r\n                    html: err,\r\n                    classes: \"#e53935 red darken-1\",\r\n                });\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!isLoading ? (\r\n                <div className=\"mycard\">\r\n                    <div className=\"card auth-card input-field\">\r\n                        <h2>Instagram</h2>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                        <button\r\n                            className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\"\r\n                            onClick={login}\r\n                        >\r\n                            login\r\n                        </button>\r\n                        <h5>\r\n                            <Link to=\"/signup\">Dont have an account?</Link>\r\n                        </h5>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <Preloader />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\nimport Preloader from \"./Preloader\";\r\n\r\nfunction Signup() {\r\n    const history = useHistory();\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [isloading, setLoading] = useState(false);\r\n    const [url, setUrl] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        if (url) {\r\n            uploadFields();\r\n        }\r\n    }, [url]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const uploadPic = () => {\r\n        if (image.length > 0) {\r\n            setLoading(true);\r\n            const formData = new FormData();\r\n            for (let i = 0; i < image.length; i++) {\r\n                formData.append(\"file\", image[i]);\r\n            }\r\n            formData.append(\"upload_preset\", \"instagram-clone\");\r\n            formData.append(\"cloud_name\", \"clonedata\");\r\n\r\n            fetch(\"\thttps://api.cloudinary.com/v1_1/clonedata/image/upload\", {\r\n                method: \"post\",\r\n                body: formData,\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => setUrl(data.url))\r\n                .catch((err) => {\r\n                    M.toast({\r\n                        html: \"Create post fail!!\",\r\n                        classes: \"#e53935 red darken-1\",\r\n                    });\r\n                    setLoading(false);\r\n                    history.push(\"/signup\");\r\n                    console.log(err);\r\n                });\r\n        }\r\n    };\r\n\r\n    const uploadFields = () => {\r\n        console.log(url);\r\n        setLoading(true);\r\n        if (\r\n            // eslint-disable-next-line\r\n            !/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i.test(\r\n                email\r\n            )\r\n        ) {\r\n            M.toast({ html: \"invalid email\", classes: \"#e53935 red darken-1\" });\r\n            setLoading(false);\r\n            return;\r\n        }\r\n        fetch(\"/signup\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n                pic: url,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setLoading(false);\r\n                if (data.error) {\r\n                    M.toast({\r\n                        html: data.error,\r\n                        classes: \"#e53935 red darken-1\",\r\n                    });\r\n                } else {\r\n                    M.toast({\r\n                        html: data.message,\r\n                        classes: \"#2e7d32 green darken-3\",\r\n                    });\r\n                    history.push(\"/signin\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                M.toast({ html: error, classes: \"#e53935 red darken-1\" });\r\n            });\r\n    };\r\n\r\n    const PostData = () => {\r\n        if (image) {\r\n            uploadPic();\r\n        } else {\r\n            uploadFields();\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            {!isloading ? (\r\n                <div className=\"mycard\">\r\n                    <div className=\"card auth-card input-field\">\r\n                        <h2>Instagram</h2>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"name\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"email\"\r\n                            placeholder=\"email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                        <div className=\"file-field input-field\">\r\n                            <div\r\n                                className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\"\r\n                                style={{ marginTop: \"0px\" }}\r\n                            >\r\n                                <span>Upload</span>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    onChange={(e) => setImage(e.target.files)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"file-path-wrapper\">\r\n                                <input\r\n                                    className=\"file-path validate\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Upload one or more files\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button\r\n                            className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\"\r\n                            onClick={PostData}\r\n                        >\r\n                            login\r\n                        </button>\r\n                        <h5>\r\n                            <Link to=\"/signin\">Already have an account?</Link>\r\n                        </h5>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <Preloader />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signup;\r\n","import React, { useEffect, useState, useContext, useRef } from \"react\";\r\nimport { UserContext } from \"../../App\";\r\nimport Preloader from \"./Preloader\";\r\nimport { Modal, Button } from \"antd\";\r\nimport M from \"materialize-css\";\r\n// import PropTypes from \"prop-types\";\r\n\r\n// Profile.propTypes = {};\r\n\r\nfunction Profile(props) {\r\n    const imageInputRef = useRef();\r\n    const [mypics, setMypics] = useState(\"\");\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [loading, setLoad] = useState(false);\r\n    const { state, dispatch } = useContext(UserContext);\r\n    const [visible, setVisible] = useState(false);\r\n    const [url, setUrl] = useState(undefined);\r\n    const [image, setImage] = useState(null);\r\n    const defaultAvatart =\r\n        \"https://images.unsplash.com/photo-1561470341-7d67ff1cdf9d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\";\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const myPost = () => {\r\n            return fetch(\"/mypost\", {\r\n                method: \"get\",\r\n                headers: {\r\n                    Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    setMypics(data.myPosts);\r\n                    setLoading(false);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    // setLoading(false);\r\n                });\r\n        };\r\n        myPost();\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n    useEffect(() => {\r\n        if (url) {\r\n            fetch(\"/updatepic\", {\r\n                method: \"put\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n                },\r\n                body: JSON.stringify({\r\n                    pic: url,\r\n                }),\r\n            })\r\n                .then((res) => res.json())\r\n                .then((result) => {\r\n                    localStorage.setItem(\r\n                        \"user\",\r\n                        JSON.stringify({ ...state, pic: result.pic })\r\n                    );\r\n                    dispatch({\r\n                        type: \"UPDATE_PIC\",\r\n                        payload: result.pic,\r\n                    });\r\n                    handleCancel();\r\n                    M.toast({\r\n                        html: \"Update avatar sucesss\",\r\n                        classes: \"#2e7d32 green darken-3\",\r\n                    });\r\n                    //window.location.reload()\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    }, [url]); // eslint-disable-line react-hooks/exhaustive-deps\r\n    const modal = () => {\r\n        setVisible(true);\r\n    };\r\n    const handleCancel = () => {\r\n        imageInputRef.current.value = null;\r\n        setImage(null);\r\n        setVisible(false);\r\n        setLoad(false);\r\n    };\r\n    const handleOk = (e) => {\r\n        e.preventDefault();\r\n        updatePhoto();\r\n    };\r\n\r\n    const updatePhoto = () => {\r\n        if (image.length > 0) {\r\n            setLoad(true);\r\n            const formData = new FormData();\r\n            for (let i = 0; i < image.length; i++) {\r\n                formData.append(\"file\", image[i]);\r\n            }\r\n            formData.append(\"upload_preset\", \"instagram-clone\");\r\n            formData.append(\"cloud_name\", \"clonedata\");\r\n            fetch(\"\thttps://api.cloudinary.com/v1_1/clonedata/image/upload\", {\r\n                method: \"post\",\r\n                body: formData,\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    console.log(data);\r\n                    setUrl(data.url);\r\n                    imageInputRef.current.value = null;\r\n                    setImage(null);\r\n                    setVisible(false);\r\n                })\r\n                .catch((err) => {\r\n                    M.toast({\r\n                        html: \"Update fail!!\",\r\n                        classes: \"#e53935 red darken-1\",\r\n                    });\r\n                    setLoad(false);\r\n                    console.log(err);\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!isLoading ? (\r\n                <div\r\n                    style={{\r\n                        maxWidth: \"750px\",\r\n                        margin: \"0px auto\",\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                            padding: \"18px 10px\",\r\n                            borderBottom: \"1px solid #ddd\",\r\n                        }}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                display: \"flex\",\r\n                                position: \"relative\",\r\n                                flexDirection: \"column\",\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                            }}\r\n                        >\r\n                            <img\r\n                                className=\"profile-avatar\"\r\n                                src={\r\n                                    state\r\n                                        ? state.pic\r\n                                            ? state.pic\r\n                                            : defaultAvatart\r\n                                        : defaultAvatart\r\n                                }\r\n                                alt=\"avatar\"\r\n                            />\r\n                            <button className=\"btn-avatar\" onClick={modal}>\r\n                                Change\r\n                            </button>\r\n                        </div>\r\n                        <div>\r\n                            <h5>{state ? state.name : null}</h5>\r\n                            <h6>{state ? state.email : null}</h6>\r\n                            <div\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"space-between\",\r\n                                }}\r\n                            >\r\n                                <span className=\"mr-2\">\r\n                                    {mypics.length} posts\r\n                                </span>\r\n                                <span className=\"mr-2\">\r\n                                    {state ? state.followers.length : 0}{\" \"}\r\n                                    followers\r\n                                </span>\r\n                                <span className=\"mr-2\">\r\n                                    {state ? state.following.length : 0}{\" \"}\r\n                                    following\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"galley\">\r\n                        {mypics\r\n                            ? mypics.map((item, index) => (\r\n                                  <img\r\n                                      key={index}\r\n                                      className=\"item\"\r\n                                      src={item.photo}\r\n                                      alt={item.title}\r\n                                  />\r\n                              ))\r\n                            : null}\r\n                    </div>\r\n                    <Modal\r\n                        title=\"Change Avatar\"\r\n                        visible={visible}\r\n                        onOk={handleOk}\r\n                        onCancel={() => handleCancel()}\r\n                        footer={[\r\n                            <Button key=\"back\" onClick={() => handleCancel()}>\r\n                                Huỷ\r\n                            </Button>,\r\n                            <Button\r\n                                loading={loading}\r\n                                key=\"submit\"\r\n                                type=\"primary\"\r\n                                onClick={(e) => handleOk(e)}\r\n                            >\r\n                                Submit\r\n                            </Button>,\r\n                        ]}\r\n                    >\r\n                        <div className=\"file-field input-field\">\r\n                            <div\r\n                                className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\"\r\n                                style={{ marginTop: \"0px\" }}\r\n                            >\r\n                                <span>Upload</span>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    onChange={(e) => {\r\n                                        setImage(e.target.files);\r\n                                    }}\r\n                                    ref={imageInputRef}\r\n                                />\r\n                            </div>\r\n                            <div className=\"file-path-wrapper\">\r\n                                <input\r\n                                    className=\"file-path validate\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Upload one or more files\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n            ) : (\r\n                <Preloader />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Preloader from \"./Preloader\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\n\r\nfunction CreatePost() {\r\n    const history = useHistory();\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [body, setBody] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [url, setUrl] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (url) {\r\n            const createPost = () => {\r\n                return fetch(\"/createpost\", {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization:\r\n                            \"Bearer \" + localStorage.getItem(\"token\"),\r\n                    },\r\n                    body: JSON.stringify({\r\n                        title,\r\n                        body,\r\n                        photo: url,\r\n                    }),\r\n                })\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        setLoading(false);\r\n                        if (data.error) {\r\n                            M.toast({\r\n                                html: data.error,\r\n                                classes: \"#e53935 red darken-1\",\r\n                            });\r\n                        } else {\r\n                            M.toast({\r\n                                html: \"create post success\",\r\n                                classes: \"#2e7d32 green darken-3\",\r\n                            });\r\n                            history.push(\"/\");\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        setLoading(false);\r\n                        M.toast({\r\n                            html: err,\r\n                            classes: \"#e53935 red darken-1\",\r\n                        });\r\n                    });\r\n            };\r\n            createPost();\r\n        }\r\n    }, [url]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const postDetails = () => {\r\n        if (image.length > 0) {\r\n            setLoading(true);\r\n            const formData = new FormData();\r\n            for (let i = 0; i < image.length; i++) {\r\n                formData.append(\"file\", image[i]);\r\n            }\r\n            formData.append(\"upload_preset\", \"instagram-clone\");\r\n            formData.append(\"cloud_name\", \"clonedata\");\r\n\r\n            fetch(\"\thttps://api.cloudinary.com/v1_1/clonedata/image/upload\", {\r\n                method: \"post\",\r\n                body: formData,\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => setUrl(data.url))\r\n                .catch((err) => {\r\n                    M.toast({\r\n                        html: \"Create post fail!!\",\r\n                        classes: \"#e53935 red darken-1\",\r\n                    });\r\n                    setLoading(false);\r\n                    history.push(\"/createpost\");\r\n                    console.log(err);\r\n                });\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            {!isLoading ? (\r\n                <div\r\n                    className=\" card input-field\"\r\n                    style={{\r\n                        margin: \"10px auto\",\r\n                        maxWidth: \"500px\",\r\n                        padding: \"20px\",\r\n                        textAlign: \"center\",\r\n                    }}\r\n                >\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Title\"\r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                    />\r\n                    <div className=\"input-field col s12\">\r\n                        <textarea\r\n                            id=\"textarea1\"\r\n                            className=\"materialize-textarea\"\r\n                            value={body}\r\n                            onChange={(e) => setBody(e.target.value)}\r\n                        ></textarea>\r\n                        <label htmlFor=\"textarea1\">Description</label>\r\n                    </div>\r\n                    <div className=\"file-field input-field\">\r\n                        <div\r\n                            className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\"\r\n                            style={{ marginTop: \"0px\" }}\r\n                        >\r\n                            <span>File</span>\r\n                            <input\r\n                                type=\"file\"\r\n                                onChange={(e) => setImage(e.target.files)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"file-path-wrapper\">\r\n                            <input\r\n                                className=\"file-path validate\"\r\n                                type=\"text\"\r\n                                placeholder=\"Upload one or more files\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className=\" btn waves-effect waves-light #64b5f6 blue lighten-2\"\r\n                        onClick={postDetails}\r\n                    >\r\n                        Submit\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <Preloader />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreatePost;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { UserContext } from \"../../App\";\r\nimport Preloader from \"./Preloader\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction UserProfile(props) {\r\n    const [userProfile, setProfile] = useState(null);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const { state, dispatch } = useContext(UserContext);\r\n    const { userid } = useParams();\r\n    // const [showFollow, setShowFollow] = useState(true);\r\n    const [showFollow, setShowFollow] = useState(\r\n        state ? !state.following.includes(userid) : true\r\n    );\r\n    const defaultAv =\r\n        \"https://images.unsplash.com/photo-1561470341-7d67ff1cdf9d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\";\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const userProfile = () => {\r\n            return fetch(`/user/${userid}`, {\r\n                method: \"get\",\r\n                headers: {\r\n                    Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    setProfile(data);\r\n                    setLoading(false);\r\n                    // if (state) {\r\n                    //     let check = null;\r\n                    //     check = data.user.followers.find(\r\n                    //         (item) => item === state._id\r\n                    //     );\r\n                    //     if (check) {\r\n                    //         setShowFollow(false);\r\n                    //     }\r\n                    // }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    // setLoading(false);\r\n                });\r\n        };\r\n        userProfile();\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const follower = () => {\r\n        fetch(\"/follow\", {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n            body: JSON.stringify({\r\n                followId: userid,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((result) => {\r\n                dispatch({\r\n                    type: \"UPDATE\",\r\n                    payload: {\r\n                        followers: result.followers,\r\n                        following: result.following,\r\n                    },\r\n                });\r\n                localStorage.setItem(\"user\", JSON.stringify(result));\r\n                setProfile((prevState) => {\r\n                    return {\r\n                        ...prevState,\r\n                        user: {\r\n                            ...prevState.user,\r\n                            followers: [\r\n                                ...prevState.user.followers,\r\n                                result._id,\r\n                            ],\r\n                        },\r\n                    };\r\n                });\r\n                setShowFollow(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const unfolow = () => {\r\n        fetch(\"/unfollow\", {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n            body: JSON.stringify({\r\n                followId: userid,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                dispatch({\r\n                    type: \"UPDATE\",\r\n                    payload: {\r\n                        following: data.following,\r\n                        followers: data.followers,\r\n                    },\r\n                });\r\n                localStorage.setItem(\"user\", JSON.stringify(data));\r\n\r\n                setProfile((prevState) => {\r\n                    const newFollower = prevState.user.followers.filter(\r\n                        (item) => item !== data._id\r\n                    );\r\n                    return {\r\n                        ...prevState,\r\n                        user: {\r\n                            ...prevState.user,\r\n                            followers: newFollower,\r\n                        },\r\n                    };\r\n                });\r\n                setShowFollow(true);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    return (\r\n        <div>\r\n            {!isLoading ? (\r\n                userProfile ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: \"750px\",\r\n                            margin: \"0px auto\",\r\n                        }}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                display: \"flex\",\r\n                                margin: \"18px 5px\",\r\n                                borderBottom: \"1px solid #ddd\",\r\n                            }}\r\n                        >\r\n                            <div>\r\n                                <img\r\n                                    className=\"profile-avatar\"\r\n                                    src={\r\n                                        userProfile.user.pic\r\n                                            ? userProfile.user.pic\r\n                                            : defaultAv\r\n                                    }\r\n                                    alt=\"avatar\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <div style={{ display: \"flex\" }}>\r\n                                    <h5>{userProfile.user.name}</h5>\r\n                                    {showFollow ? (\r\n                                        <button\r\n                                            style={{\r\n                                                marginTop: \"15px\",\r\n                                                marginLeft: \"10px\",\r\n                                                fontSize: \"10px\",\r\n                                                padding: \"0px 10px\",\r\n                                            }}\r\n                                            className=\"btn  #64b5f6 blue lighten-2\"\r\n                                            onClick={follower}\r\n                                        >\r\n                                            follow\r\n                                        </button>\r\n                                    ) : (\r\n                                        <button\r\n                                            style={{\r\n                                                marginTop: \"15px\",\r\n                                                marginLeft: \"10px\",\r\n                                                fontSize: \"10px\",\r\n                                                padding: \"0px 10px\",\r\n                                            }}\r\n                                            className=\"btn  #64b5f6 blue lighten-2\"\r\n                                            onClick={unfolow}\r\n                                        >\r\n                                            unfollow\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n                                <h6>{userProfile.user.email}</h6>\r\n                                <div\r\n                                    style={{\r\n                                        display: \"flex\",\r\n                                        justifyContent: \"space-between\",\r\n                                    }}\r\n                                >\r\n                                    <span className=\"mr-2\">\r\n                                        {userProfile.posts.length} posts\r\n                                    </span>\r\n                                    <span className=\"mr-2\">\r\n                                        {userProfile.user.followers.length}{\" \"}\r\n                                        followers\r\n                                    </span>\r\n                                    <span className=\"mr-2\">\r\n                                        {userProfile.user.following.length}{\" \"}\r\n                                        following\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"galley\">\r\n                            {userProfile.posts.length > 0\r\n                                ? userProfile.posts.map((item, index) => (\r\n                                      <img\r\n                                          key={index}\r\n                                          className=\"item\"\r\n                                          src={item.photo}\r\n                                          alt={item.title}\r\n                                      />\r\n                                  ))\r\n                                : null}\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div>Not Found</div>\r\n                )\r\n            ) : (\r\n                <Preloader />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserProfile;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Preloader from \"./Preloader\";\r\nimport { UserContext } from \"../../App\";\r\nimport M from \"materialize-css\";\r\nimport { Link } from \"react-router-dom\";\r\n// import PropTypes from \"prop-types\";\r\n\r\n// Home.propTypes = {};\r\n\r\nfunction SubcribesUserPosts(props) {\r\n    const [data, setData] = useState(\"\");\r\n    const [text, setText] = useState(\"\");\r\n    const [isLoading, setLoading] = useState(false);\r\n    const { state } = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        fetch(\"/getsubpost\", {\r\n            method: \"get\",\r\n            headers: {\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setData(data.posts);\r\n                setLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    const like = (id) => {\r\n        fetch(\"/like\", {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((result) => {\r\n                const newData = data.map((item) => {\r\n                    if (item._id === result._id) {\r\n                        return { ...item, likes: result.likes };\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                });\r\n\r\n                setData(newData);\r\n            })\r\n            .catch((err) => {\r\n                M.toast({\r\n                    html: err,\r\n                    classes: \"#e53935 red darken-1\",\r\n                });\r\n            });\r\n    };\r\n\r\n    const unLike = (id) => {\r\n        fetch(\"/unlike\", {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((result) => {\r\n                const newData = data.map((item) => {\r\n                    if (item._id === result._id) {\r\n                        return { ...item, likes: result.likes };\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                });\r\n\r\n                setData(newData);\r\n            })\r\n            .catch((err) => {\r\n                M.toast({\r\n                    html: err,\r\n                    classes: \"#e53935 red darken-1\",\r\n                });\r\n            });\r\n    };\r\n\r\n    const makeComment = (text, postId) => {\r\n        fetch(\"/comment\", {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n            body: JSON.stringify({\r\n                text,\r\n                postId,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((result) => {\r\n                const newData = data.map((item) => {\r\n                    if (item._id === result._id) {\r\n                        return result;\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                });\r\n\r\n                setData(newData);\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    const deletePost = (postId) => {\r\n        fetch(`/deletepost/${postId}`, {\r\n            method: \"delete\",\r\n            headers: {\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n        })\r\n            .then((res) => res.json())\r\n            .then((result) => {\r\n                const newData = data.filter((item) => {\r\n                    return item._id !== result._id;\r\n                });\r\n                setData(newData);\r\n                M.toast({\r\n                    html: \"delete post success\",\r\n                    classes: \"#2e7d32 green darken-3\",\r\n                });\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n    return (\r\n        <div>\r\n            {!isLoading ? (\r\n                <div className=\"home\">\r\n                    {data.length ? (\r\n                        data.map((item, index) => (\r\n                            <div key={index} className=\"card home-card\">\r\n                                <h5 className=\"home-title\">\r\n                                    <Link\r\n                                        to={\r\n                                            item.postedBy._id !== state._id\r\n                                                ? \"/profile/\" +\r\n                                                  item.postedBy._id\r\n                                                : \"/profile\"\r\n                                        }\r\n                                    >\r\n                                        {item.postedBy.name}\r\n                                    </Link>\r\n                                    {item.postedBy._id === state._id ? (\r\n                                        <i\r\n                                            className=\"material-icons\"\r\n                                            style={{\r\n                                                color: \"red\",\r\n                                                cursor: \"pointer\",\r\n                                                float: \"right\",\r\n                                            }}\r\n                                            onClick={() => deletePost(item._id)}\r\n                                        >\r\n                                            delete\r\n                                        </i>\r\n                                    ) : (\r\n                                        <i\r\n                                            className=\"material-icons\"\r\n                                            style={{\r\n                                                color: \"#ddd\",\r\n                                                float: \"right\",\r\n                                            }}\r\n                                        >\r\n                                            delete\r\n                                        </i>\r\n                                    )}\r\n                                </h5>\r\n                                <div className=\"car-image\">\r\n                                    <img\r\n                                        style={{\r\n                                            width: \"100%\",\r\n                                        }}\r\n                                        src={item.photo}\r\n                                        alt={item.title}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"card-content input-field\">\r\n                                    {item.likes.includes(state._id) ? (\r\n                                        <i\r\n                                            className=\"material-icons\"\r\n                                            style={{\r\n                                                color: \"red\",\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                            onClick={() => unLike(item._id)}\r\n                                        >\r\n                                            favorite\r\n                                        </i>\r\n                                    ) : (\r\n                                        <i\r\n                                            className=\"material-icons\"\r\n                                            style={{\r\n                                                color: \"#ddd\",\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                            onClick={() => like(item._id)}\r\n                                        >\r\n                                            favorite\r\n                                        </i>\r\n                                    )}\r\n                                    <h6>{item.likes.length} likes</h6>\r\n                                    <h6>{item.title}</h6>\r\n                                    <p>{item.body}</p>\r\n                                    {item.comments.map((record) => {\r\n                                        return (\r\n                                            <h6 key={record._id}>\r\n                                                <span\r\n                                                    style={{\r\n                                                        fontWeight: \"500\",\r\n                                                    }}\r\n                                                >\r\n                                                    {record.postedBy.name}\r\n                                                </span>\r\n                                                <span> {record.text}</span>\r\n                                            </h6>\r\n                                        );\r\n                                    })}\r\n                                    <form\r\n                                        onSubmit={(e) => {\r\n                                            console.log(item.poste);\r\n                                            e.preventDefault();\r\n                                            makeComment(\r\n                                                e.target[0].value,\r\n                                                item._id\r\n                                            );\r\n                                            setText(\"\");\r\n                                        }}\r\n                                    >\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            placeholder=\"add a comment\"\r\n                                            value={text}\r\n                                            onChange={(e) => {\r\n                                                setText(e.target.value);\r\n                                            }}\r\n                                        />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <div>\r\n                            <h2>No posts!!!</h2>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            ) : (\r\n                <Preloader />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SubcribesUserPosts;\r\n","export const INITIAL_STATE = null;\r\nexport const reducer = (state, action) => {\r\n    if (action.type === \"USER\") {\r\n        return action.payload;\r\n    }\r\n    if (action.type === \"CLEAR\") {\r\n        return null;\r\n    }\r\n    if (action.type === \"UPDATE\") {\r\n        return {\r\n            ...state,\r\n            followers: action.payload.followers,\r\n            following: action.payload.following,\r\n        };\r\n    }\r\n    if (action.type === \"UPDATE_PIC\") {\r\n        return {\r\n            ...state,\r\n            pic: action.payload,\r\n        };\r\n    }\r\n    return state;\r\n};\r\n","import React, { useEffect, createContext, useReducer, useContext } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    useHistory,\n} from \"react-router-dom\";\nimport Home from \"./components/screens/Home\";\nimport Login from \"./components/screens/Login\";\nimport Signup from \"./components/screens/Signup\";\nimport Profile from \"./components/screens/Profile\";\nimport CreatePost from \"./components/screens/CreatePost\";\nimport UserProfile from \"./components/screens/UserProfile\";\nimport SubcribesUserPosts from \"./components/screens/SubcribesUserPosts\";\nimport { reducer, INITIAL_STATE } from \"./reducers/userReducer\";\nimport \"antd/dist/antd.css\";\n\nexport const UserContext = createContext();\n\nconst Routing = () => {\n    const history = useHistory();\n    const { dispatch } = useContext(UserContext);\n    useEffect(() => {\n        const user = JSON.parse(localStorage.getItem(\"user\"));\n        if (user) {\n            dispatch({ type: \"USER\", payload: user });\n            history.push(\"/\");\n        } else {\n            history.push(\"/signin\");\n        }\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n    return (\n        <Switch>\n            <Route exact path=\"/\">\n                <Home />\n            </Route>\n            <Route path=\"/signup\">\n                <Signup />\n            </Route>\n            <Route path=\"/signin\">\n                <Login />\n            </Route>\n            <Route exact path=\"/profile\">\n                <Profile />\n            </Route>\n            <Route path=\"/createpost\">\n                <CreatePost />\n            </Route>\n            <Route path=\"/profile/:userid\">\n                <UserProfile />\n            </Route>\n            <Route path=\"/myfollowingpost\">\n                <SubcribesUserPosts />\n            </Route>\n        </Switch>\n    );\n};\n\nfunction App() {\n    const [state, dispatch] = useReducer(reducer, INITIAL_STATE);\n    return (\n        <UserContext.Provider value={{ state, dispatch }}>\n            <Router>\n                <Navbar />\n                <Routing />\n            </Router>\n        </UserContext.Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}